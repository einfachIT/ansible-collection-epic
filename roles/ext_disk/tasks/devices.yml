---
- name: Read device information (always use unit when probing)
  community.general.parted: "device={{ device.ext_disk_device }} unit=MiB"
  register: dev_info

- debug:
    var: dev_info.partitions

- name: Wipe all partitions
  community.general.parted:
    device: "{{ device.ext_disk_device }}"
    number: '{{ item.num }}'
    state: absent
  register: partitions 
  loop: '{{ dev_info.partitions }}'
  when: dev_info.partitions[0].fstype != "ext4" or device.ext_disk_force_whipe

    #- name: Create a new ext4 primary partition)
    #  community.general.parted:
    #    device: "{{ device.ext_disk_device }}"
    #    number: 1
    #    part_start: 0%
    #    part_end: 100%
    #    label: gpt
    #    name: docker
    #    fs_type: "ext4"
    #    state: present
    #  when: not partitions.skipped or dev_info.partitions | length == 0

- name: Create a ext4 filesystem on
  community.general.filesystem:
    fstype: ext4
    force: true
    dev: "{{ device.ext_disk_device }}"
  when: not partitions.skipped or device.ext_disk_force_whipe

- name: "create mountpoint"
  ansible.builtin.file:
    path: "{{ device.ext_disk_mountpoint }}"
    state: directory

- name: Mount partition
  ansible.posix.mount:
    path: "{{ device.ext_disk_mountpoint }}" 
    src: "{{ device.ext_disk_device }}"
    fstype: ext4
    state: mounted
