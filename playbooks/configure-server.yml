---
- name: setup epic docker container host
  hosts: raspberries:!raw
  become: true
  gather_facts: false
  tasks:
    - name: install prerequisites
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - python3
        - python3-pip

    - name: add docker repo GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: install docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/debian buster stable
        state: present
    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: grant ansible_user access to docker
      user:
        name: "{{ ansible_user }}"
        append: true
        groups: 
          - docker
    - name: configure to expose docker api vi tcp
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/docker.service 
        regexp: '^ExecStart='
        line: "ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375 --containerd=/run/containerd/containerd.sock"
      register: docker_config

    - name: Restart service docker, also issue daemon-reload to pick up config changes
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: docker
      when: docker_config.changed

    - name: install python modules
      pip:
        name: docker
        state: present
  handlers:
    - name: restart docker
      service: 
        name: docker 
        state: restarted


- name: install argon fan control scripts
  hosts: argon_case
  become: true
  gather_facts: false
  tasks:
    - name: download argon fan control script
      ansible.builtin.get_url:
        url: https://download.argon40.com/argon1.sh
        dest: /tmp/argon1.sh
        mode: '0744'

    - name: install argon fan control script
      ansible.builtin.shell: /tmp/argon1.sh
      args:
        executable: /bin/bash
        creates: /usr/bin/argonone-config

- name: mount external usb disks
  hosts: external_disk
  become: true
  gather_facts: true
  tasks:

    - name: Read device information (always use unit when probing)
      community.general.parted: device=/dev/sda unit=MiB
      register: sda_info

    - debug:
        var: sda_info
    
    - name: Remove all partitions from disk
      community.general.parted:
        device: /dev/sda
        number: '{{ item.num }}'
        state: absent
      loop: '{{ sda_info.partitions }}'
    
    #- name: Extend an existing partition to fill all available space
    #  community.general.parted:
    #    device: /dev/sdb
    #    number: "{{ sdb_info.partitions | length }}"
    #    part_end: "100%"
    #    resize: true
    #    state: present

    #- name: Create a new ext4 primary partition
    #  community.general.parted:
    #    device: /dev/sdb
    #    number: 1
    #    state: present
    #    fs_type: ext4
    #- name: Create a ext4 filesystem on /dev/sdb1 and check disk blocks
    #  community.general.filesystem:
    #    fstype: ext4
    #    dev: /dev/sda
    #    opts: -cc

